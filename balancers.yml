---
- name: balancers.yml | Configure HAProxy load balancers
  hosts: balancers
  become: true
  become_method: sudo
  any_errors_fatal: true
  gather_facts: true

  pre_tasks:
    - name: "Set variable: ansible_python_interpreter"
      ansible.builtin.set_fact:
        ansible_python_interpreter: "/usr/bin/env python3"
      when: "'python3' not in (ansible_python_interpreter | default(''))"
      tags: always

    - name: Include main variables
      ansible.builtin.include_vars: "vars/main.yml"
      tags: always

    - name: Include system variables
      ansible.builtin.include_vars: "vars/system.yml"
      tags: always

    - name: Include OS-specific variables
      ansible.builtin.include_vars: "vars/{{ ansible_os_family }}.yml"
      tags: always

    - name: Checking Linux distribution
      ansible.builtin.fail:
        msg: "{{ ansible_distribution }} is not supported"
      when: ansible_distribution not in os_valid_distributions

    - name: Checking version of OS Linux
      ansible.builtin.fail:
        msg: "{{ ansible_distribution_version }} of {{ ansible_distribution }} is not supported"
      when: ansible_distribution_version is version_compare(os_minimum_versions[ansible_distribution], '<')

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 3600
      register: apt_status
      until: apt_status is success
      delay: 5
      retries: 3
      environment: "{{ proxy_env | default({}) }}"
      when: ansible_os_family == "Debian" and installation_method == "repo"

    - name: Make sure the gnupg and apt-transport-https packages are present
      ansible.builtin.apt:
        pkg:
          - gnupg
          - apt-transport-https
        state: present
      register: apt_status
      until: apt_status is success
      delay: 5
      retries: 3
      environment: "{{ proxy_env | default({}) }}"
      when: ansible_os_family == "Debian" and installation_method == "repo"

  roles:
    - role: hostname
    - role: resolv_conf
    - role: sysctl

    - role: haproxy

    - role: confd
      when: dcs_type == "etcd"

    - role: keepalived
      when: cluster_vip is defined and cluster_vip | length > 0
